load("@hedron_compile_commands//:refresh_compile_commands.bzl", "refresh_compile_commands")

package(default_visibility = ["//visibility:public"])

exports_files([
    "AUTHORS",
    "LICENSE",
])

refresh_compile_commands(
    name = "refresh_compile_commands",
)

config_setting(
    name = "msvc",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "msvc-cl",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "gcc",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "gcc",
    },
    visibility = [":__subpackages__"],
)

config_setting(
    name = "clang",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "clang",
    },
    visibility = [":__subpackages__"],
)

filegroup(
    name = "radiant-hdrs",
    srcs = glob([
        "radiant/**/*.h",
        "radiant/**/*.hpp",
    ]),
)

filegroup(
    name = "radiant-natvis",
    srcs = [
        "radiant/Rad.natvis",
    ],
)

cc_library(
    name = "radiant",
    hdrs = [":radiant-hdrs"],
)

platform(
    name = "windows_x86",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:x86_32",
    ],
    visibility = [":__subpackages__"],
)

platform(
    name = "windows_x64",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:x86_64",
    ],
    visibility = [":__subpackages__"],
)

platform(
    name = "windows_arm",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:arm",
    ],
    visibility = [":__subpackages__"],
)

platform(
    name = "windows_arm64",
    constraint_values = [
        "@platforms//os:windows",
        "@platforms//cpu:arm64",
    ],
    visibility = [":__subpackages__"],
)
